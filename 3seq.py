'''

Модуль предполагает реализацию следующей логики:
Пользователь вводит элементы 1-го списка (по очереди как в МОДУЛЬ 1 или вместе как в МОДУЛЬ 2)
Затем он вводит элементы 2-го списка
Удалить из первого списка элементы присутствующие во 2-ом и вывести результат на экран
Пример работы: Введите элементы 1-го списка: 1,2,3,4,5
Введите элементы 2-го списка: 2,5
Результат: 1,3,4

В условии не обозначен каким должен быть результат, например, для 1-го списка типа '1,2,2,3,4,5,5,5':
- 1,2,3,4,5,5 или
- 1,3,4, то
мы предполагаем логику полного изъятия элементов 2-го списка из 1-го, т.е. при наличии в 1-ом списке нескольких
одиинаковых элементов (например, 2,2) и наличии такого же / таких же элементов во 2-ом списке, мы удаляем все такие
элементы из 1-го списка, т.е. в нашем случае результат будет '1,3,4'

Максимальное количество элементов в списках не ограничиваем. Это решает сам пользователь.

Результирующий список сортируем по возрастанию.

'''
# импортируем библиотеку регулярных выражений
import re

# функция для проверки вводимого значения на число, в том числе, с плавающей точкой
def is_number(x):

    try:
        float(x)
        return True

    except ValueError:
        return False


# создаем список возможных ответов 'да', в том числе с учетом непереключенной раскладки
yes_list = ['да', 'д', 'yes', 'y', 'lf','l', '1', 'true']

# создаем список возможных ответов 'нет', в том числе с учетом непереключенной раскладки
no_list = ['нет', 'н', 'не', 'no','n', 'ytn', '0', 'false']

checker = False    # чеккер для проверки, что пользователь ввел нужный нам ответ

digits_first = []    # инициируем первый список чисел
digits_second = []    # инициируем второй список чисел

counter_first = 1    # инициируем счетчик элементов первого списка чисел
counter_second = 1    # инициируем счетчик элементов первого списка чисел

# запрашиваем как пользователь хочет вводить элементы каждого списк: поэлементно или все сразу
# для унификации приводим их к нижнему регистру
list_type = input('Вы хотите вводить элементы списка по одному (да / нет)? ').lower()

# создаем цикл, в котором будет проверяться статус чеккера
while checker == False:
    # если ответ пользователя содержится в списке вариантов 'да', то мы запустим сбор списков чисел поэлементно
    if list_type in yes_list:
        checker = True    # переводим чеккер в положение истина, т.к. пользователь выбрал вариант заполнения списков

        print('\n*** ДОБАВЛЯЕМ ЧИСЛА В ПЕРВЫЙ СПИСОК ***')    # выводим разграничитель списков

        more_digit_first = True    # чеккер ввода еще одного элемента

        # используем цикл для ввода новых элементов списка
        # с помощью счетчика изменяем информацию о номере вводимого элемента списка
        while more_digit_first:
            digit = input(f'Введите {counter_first} элемент ПЕРВОГО списка: ')

            # проверяем, что введено число
            while not is_number(digit):
                digit = input(f'Введите {counter_first} элемент ПЕРВОГО списка: ')

            # если пользователь ввел число с плавающей точкой, то преобразуем строку в float, иначе - int
            # добавляем полученное число в объявленный ранее список
            if '.' in digit:
                digits_first.append(float(digit))
            else:
                digits_first.append(int(digit))

            # запрашиваем пользователя, хочет ли он добавить еще одно число
            one_more = input('Хотите добавить еще число в ПЕРВЫЙ список? ')

            # проверяем ответ на вхождение в наши списки 'да' и 'нет'
            # если пользователь отвечает 'да', то цикл продолжается, а счетчик элементов увеличивается на 1
            if one_more in yes_list:
                more_digit_first = True
                counter_first += 1
            # если пользователь отвечает 'нет', то цикл останавливается
            elif one_more in no_list:
                more_digit_first = False
            # если пользователь отвечает тем, чего нет, то цикл останавливается и выводится предупреждение
            else:
                more_digit_first = False
                print('Вы написали что-то непонятное. Переходим ко ВТОРОМУ списку.')

        print('\n*** ДОБАВЛЯЕМ ЧИСЛА ВО ВТОРОЙ СПИСОК ***')    # выводим разграничитель списков

        more_digit_second = True    # чеккер ввода еще одного элемента

        # используем цикл для ввода новых элементов списка
        # с помощью счетчика изменяем информацию о номере вводимого элемента списка
        while more_digit_second:
            digit = input(f'Введите {counter_second} элемент ВТОРОГО списка: ')

            # проверяем, что введено число
            while not is_number(digit):
                digit = input(f'Введите {counter_second} элемент ВТОРОГО списка: ')

            # если пользователь ввел число с плавающей точкой, то преобразуем строку в float, иначе - int
            # добавляем полученное число в объявленный ранее список
            if '.' in digit:
                digits_second.append(float(digit))
            else:
                digits_second.append(int(digit))

            # запрашиваем пользователя, хочет ли он добавить еще одно число
            one_more = input('Хотите добавить еще число во ВТОРОЙ список? ')

            # проверяем ответ на вхождение в наши списки 'да' и 'нет'
            # если пользователь отвечает 'да', то цикл продолжается, а счетчик элементов увеличивается на 1
            if one_more in yes_list:
                more_digit_second = True
                counter_second += 1
            # если пользователь отвечает 'нет', то цикл останавливается
            elif one_more in no_list:
                more_digit_second = False
            # если пользователь отвечает тем, чего нет, то цикл останавливается и выводится предупреждение
            else:
                more_digit_second = False
                print('Вы написали что-то непонятное. Переходим к вычислениям.')

    # если ответ пользователя содержится в списке вариантов 'нет', то мы запустим сбор списков чисел набором
    elif list_type in no_list:
        checker = True    # переводим чеккер в положение истина, т.к. пользователь выбрал вариант заполнения списков

        print('\n*** ДОБАВЛЯЕМ ЧИСЛА В ПЕРВЫЙ СПИСОК ***')    # выводим разграничитель списков

        # запрос ввода пользователем количества элементов в списске
        all_digits_first = input('Введите элементы ПЕРВОГО списка через запятую (например, 2,3,4,5,5,6,5,3,9): ')

        all_digits_first = all_digits_first.replace(' ', '')    # убираем пробелы, которые пользователь мог случайно поставить

        # заменим все любые символы, кроме цифр и '.' на ',' это поможет нам обойти ограничение с разнородными разделителями
        # затем разобъем полученный сет на элементы по разделителю ','
        all_digits_first = re.sub(r'[^\.0-9]', ',', all_digits_first).split(',')

        # удалим в цикле пустые элементы
        while '' in all_digits_first:
            all_digits_first.pop(all_digits_first.index(''))

        digits_first = all_digits_first    # присваиваем нашему первому списку значения очищенного

        print('\n*** ДОБАВЛЯЕМ ЧИСЛА ВО ВТОРОЙ СПИСОК ***')    # выводим разграничитель списков

        # запрос ввода пользователем количества элементов в списске
        all_digits_second = input('Введите элементы ВТОРОГО списка через запятую (например, 2,3,4,5,5,6,5,3,9): ')

        all_digits_second = all_digits_second.replace(' ', '')    # убираем пробелы, которые пользователь мог случайно поставить

        # заменим все любые символы, кроме цифр и '.' на ',' это поможет нам обойти ограничение с разнородными разделителями
        # затем разобъем полученный сет на элементы по разделителю ','
        all_digits_second = re.sub(r'[^\.0-9]', ',', all_digits_second).split(',')

        # удалим в цикле пустые элементы
        while '' in all_digits_second:
            all_digits_second.pop(all_digits_second.index(''))

        digits_second = all_digits_second    # присваиваем нашему второму списку значения очищенного

    else:
        checker = False    # переводим чккер в положение ложь, т.к. пользователь невыбрал вариант заполнения списков
        print('Вы ввели что-то непонятное.')    # выводим предупреждение

        # заново задаем пользователю вопрос о способе заполнения списков
        list_type = input('Вы хотите вводить элементы списка по одному (да / нет)? ').lower()

# для контроля выведем оба списка
print(f'\nПервый список: \n{digits_first} \nВторой список: \n{digits_second}')

# проверяем все элементы второго списка на вхождение в первый
for dig in digits_second:
    # если элемент второго списка есть в первом, то в цикле убираем все его представления
    while dig in digits_first:
        digits_first.remove(dig)

# отсортируем список по возрастанию
digits_first.sort()

# выведем список в соответствии с условиями задачи
# добавим пробел после запятой, чтобы более явно считывались числа с плавающей точкой
print('\nРезультат вычислений:')
print(*digits_first, sep=', ')
