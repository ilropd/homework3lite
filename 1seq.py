'''

Модуль реализует следующую логику:
Пользователь вводит количество элементов будущего списка
После этого по очереди по одной вводит любые цифры
Сохранить цифры в список
Отсортировать список по возрастанию и вывести на экран
Пример работы: Введите количество элементов: 3
Введите 1 элемент: 5
Введите 2 элемент: 2
Введите 3 элемент: 4
Вывод: [2, 4, 5]

Допустимо вводить в качестве элемента отрицательные значения и числа с плавающей точкой

'''

# функция для проверки вводимого значения на число, в том числе, с плавающей точкой
def is_number(x):
    
    try:
        float(x)
        return True

    except ValueError:
        return False

# запрос ввода пользователем количества элементов в списске
quantity = input('Введите количество элементов будущего списка (от 1 до 10) одним числом: ')

# проверяем ввод пользователя на соответствие условиям: число, от 1 до 10
# если не число или больше/меньше заданных границ, то просим ввести количество элементов списка снова
while not quantity.isdigit() or (1 > int(quantity)) or (int(quantity) > 10):
    quantity = input('Введите количество элементов будущего списка (от 1 до 10) одним числом: ')

quantity = int(quantity)    # преобразуем строку в число

digits_list = []    # объявим список, в который будем добавлять наши значения

# в цикле делаем запрос пользователя на ввод значений для списка по порядку в рамках количества элементов списка,
# которое ограничил пользователь
for i in range(quantity):
    digit = input(f'Введите {i+1} элемент: ')

    # проверяем, что введенное значение - число
    while not is_number(digit):
        digit = input(f'Введите {i+1} элемент: ')

    # если пользователь ввел число с плавающей точкой, то преобразуем строку в float, иначе - int
    # добавляем полученное число в объявленный ранее список
    if '.' in digit:
        digits_list.append(float(digit))
    else:
        digits_list.append(int(digit))

    i += 1    # увеличиваем значение i на единицу, чтобы наш цикл работал

digits_list.sort()    # отсортируем список по возрастанию

print(f'Ваш список: {digits_list}')    # выведем отсортированный список
